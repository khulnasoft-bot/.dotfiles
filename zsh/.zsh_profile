export XDG_CONFIG_HOME=$HOME/.config
VIM="nvim"

# MacOS-specific fzf configuration
if [ -f /usr/local/opt/fzf/shell/key-bindings.zsh ]; then
    source /usr/local/opt/fzf/shell/key-bindings.zsh
    source /usr/local/opt/fzf/shell/completion.zsh
elif [ -f /opt/homebrew/opt/fzf/shell/key-bindings.zsh ]; then
    source /opt/homebrew/opt/fzf/shell/key-bindings.zsh
    source /opt/homebrew/opt/fzf/shell/completion.zsh
elif [ -f ~/.fzf.zsh ]; then
    source ~/.fzf.zsh
fi

# Keep useful exports
export PYTHONBREAKPOINT="pudb.set_trace"
export GOPATH=$HOME/go
export GIT_EDITOR=$VIM
export DENO_INSTALL="$HOME/.deno"
export N_PREFIX="$HOME/.local/n"
export DOTFILES=$HOME/.dotfiles

# Path additions for macOS
# Define helper function if not already defined
if ! type addToPathFront > /dev/null; then
    addToPathFront() {
        if [ -d "$1" ]; then
            PATH="$1:$PATH"
        fi
    }
fi

addToPathFront /usr/local/bin
addToPathFront /opt/homebrew/bin
addToPathFront $HOME/.local/.npm-global/bin
addToPathFront $HOME/.local/scripts
addToPathFront $HOME/.local/bin
addToPathFront $HOME/.local/n/bin/
addToPathFront $HOME/go/bin
addToPathFront $HOME/.deno/bin

# Where should I put you?
bindkey -s ^f "tmux-sessionizer\n"

# Utility functions
catr() {
    tail -n "+$1" $3 | head -n "$(($2 - $1 + 1))"
}

validateYaml() {
    python -c 'import yaml,sys;yaml.safe_load(sys.stdin)' < $1
}

goWork() {
    cp ~/.npm_work_rc ~/.npmrc
}

goPersonal() {
    cp ~/.npm_personal_rc ~/.npmrc
}

cat1Line() {
    cat $1 | tr -d "\n"
}

ioloop() {
    FIFO=$(mktemp -u /tmp/ioloop_$$_XXXXXX ) &&
    trap "rm -f $FIFO" EXIT &&
    mkfifo $FIFO &&
    ( : <$FIFO & ) &&    # avoid deadlock on opening pipe
    exec >$FIFO <$FIFO
}

eslintify() {
    cat $1 > /tmp/file_to_eslint
    npx eslint
}
